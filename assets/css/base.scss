.container {
  width: 100%;
  padding: 0 0.5rem;
  margin: 0 auto;
}

@each $name, $value in $containerWidth {
  @media (min-width: #{$name}) {
    .container {
      max-width: $name;
      padding: $value;
    }
  }
}

// MEDIA STYLE FOR HIDDEN
@each $name, $value in $containerSize {
  @media (min-width: $value) {
    .--#{$name}\:hidden {
      display: none !important;
    }
    .--#{$name}\:block {
      display: block !important;
    }
  }
}

// flex style
.flex {
  display: flex;
}

.flex-wrap {
  flex-wrap: wrap;
}

@each $name, $value in $justifyContent {
  .justify-#{$name} {
    justify-content: $value;
  }
}

@each $name, $value in $alignItems {
  .align-#{$name} {
    align-items: $value;
  }
}

@each $value in $flexDirection {
  .flex-#{$value} {
    flex-direction: #{$value};
  }
}

@each $name, $value in $commonSize {
  .gap-#{$name} {
    gap: calc(0.25rem * $value);
  }
  .gap-y-#{$name} {
    gap: calc(0.25rem * $value) 0;
  }
  .gap-x-#{$name} {
    gap: 0 calc(0.25rem * $value);
  }
  .h-#{$name} {
    height: calc(0.25rem * $value);
  }
  .w-#{$name} {
    width: calc(0.25rem * $value);
  }
  .p-#{$name} {
    padding: calc(0.25rem * $value);
  }
  .py-#{$name} {
    padding-top: calc(0.25rem * $value);
    padding-bottom: calc(0.25rem * $value);
  }
  .px-#{$name} {
    padding-left: calc(0.25rem * $value);
    padding-right: calc(0.25rem * $value);
  }
}

.h-px {
  height: 1px;
}
.w-px {
  width: 1px;
}

.grow {
  flex-grow: 1;
}

// Grid style
.grid {
  display: grid;
}

@each $name, $value in $justifyItems {
  .justify-items-#{$name} {
    justify-items: $value;
  }
}

@each $name, $value in $alignContent {
  .content-#{$name} {
    align-content: $value;
  }
}

// width style
.w-full {
  width: 100%;
}
.w-1\/4 {
  width: 25%;
}
.w-1\/2 {
  width: 50%;
}
.w-3\/4 {
  width: 75%;
}

.h-full {
  height: 100%;
}

.aspect-ratio {
  aspect-ratio: 1/1;
}
.aspect-ratio--imp {
  aspect-ratio: 1/1 !important;
}

// white-space
.whitespace-nowrap {
  white-space: nowrap;
}

//position {
.relative {
  position: relative;
}

// visible
.hidden {
  overflow: hidden;
}
.visible {
  overflow: visible;
}

.none {
  display: none;
}

// cursor
.pointer {
  cursor: pointer;
}

.no-drop {
  cursor: no-drop !important;
}

// border style
@each $name, $size in $borderRadius {
  .rounded-#{$name}-imp {
    border-radius: var(--rounded-#{$name}) !important;
  }
  .rounded-#{$name} {
    border-radius: var(--rounded-#{$name});
  }
}

// Color style
@each $name, $value in $color {
  .text-#{$name} {
    color: var(--#{$name}) !important;
  }
  .border-#{$name} {
    border-color: var(--#{$name});
  }
  .border-#{$name}--imp {
    border-color: var(--#{$name}) !important;
  }
  .bg-#{$name}--imp {
    background-color: var(--#{$name}) !important;
  }
  .bg-#{$name} {
    background-color: var(--#{$name});
  }
  .fill-#{$name} {
    fill: var(--#{$name});
  }
  .stroke-#{$name} {
    stroke: var(--#{$name});
  }
}
.color-inherit {
  color: inherit;
}

// Text Style
@each $name, $size in $fontSize {
  .text-#{$name} {
    font-size: var(--text-#{$name});
  }
  // .text-#{$name}--imp {
  //   font-size: var(--text-#{$name}) !important;
  // }
}

@each $name, $value in $textWeight {
  .text-#{$name} {
    font-weight: #{$value};
  }
  // .text-#{$name}--imp {
  //   font-weight: #{$value} !important;
  // }
}

// visibility style

// Typography style
$sizes: 1, 2, 3, 4, 5, 6, 7, 8, 9, 10;
@each $value in $sizes {
  .line-clamp-#{$value} {
    overflow: hidden;
    display: -webkit-box;
    -webkit-box-orient: vertical;
    -webkit-line-clamp: 2;
  }
}
h1 {
  font-size: var(--text-2xl);
}
h2 {
  font-size: var(--text-xl);
}
h3 {
  font-size: var(--text-lg);
}
h4 {
  font-size: var(--text-md);
}

@media screen and (max-width: 768px) {
}
@media screen and (max-width: 600px) {
  h2 {
    font-size: var(--text-lg);
  }
  h4 {
    font-size: var(--text-base);
  }
}

.text-center {
  text-align: center;
}

.truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.pre-wrap {
  white-space: pre-wrap;
}

// TRANSFORM STYLE \

// scale
.-scale-100 {
  transform: scaleX(-1);
}

// SHADOW STYLE

@each $name, $value in $shadow {
  .#{$name} {
    box-shadow: var(--#{$name});
  }
}

// object 

.object-cover {
  object-fit: cover;
}